class PVPGame {
    constructor(app) {
        this.app = app;
        this.wheel = document.getElementById('pvp-wheel');
        this.spinButton = document.getElementById('spin-pvp');
        this.playersList = document.getElementById('players-list');
        this.isSpinning = false;
        this.init();
    }

    init() {
        this.spinButton.addEventListener('click', () => this.spinWheel());
        this.generatePlayers();
    }

    generatePlayers() {
        const players = [
            { id: 1, name: '–ò–≥—Ä–æ–∫ 1', bet: 50, avatar: 'P1' },
            { id: 2, name: '–ò–≥—Ä–æ–∫ 2', bet: 30, avatar: 'P2' },
            { id: 3, name: '–ò–≥—Ä–æ–∫ 3', bet: 20, avatar: 'P3' },
            { id: 4, name: '–í—ã', bet: 10, avatar: 'YOU' }
        ];

        this.playersList.innerHTML = '';
        players.forEach(player => {
            const playerElement = document.createElement('div');
            playerElement.className = 'player-item';
            playerElement.innerHTML = `
                <div class="player-avatar">${player.avatar}</div>
                <div class="player-name">${player.name}</div>
                <div class="player-bet">${player.bet} TON</div>
            `;
            this.playersList.appendChild(playerElement);
        });
    }

    async spinWheel() {
        if (this.isSpinning) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
        const authData = localStorage.getItem('userAuth');
        if (!authData || !JSON.parse(authData).walletConnected) {
            this.app.showNotification('–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ PVP –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª—ë–∫!');
            return;
        }

        const betAmount = 10;

        try {
            // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, –∏–Ω–∞—á–µ —Ä–µ–∞–ª—å–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            if (this.app.isDemoMode) {
                const userData = this.app.getUserData();
                if (userData.balance < betAmount) {
                    this.app.showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TON –¥–ª—è —Å—Ç–∞–≤–∫–∏!');
                    return;
                }
                userData.balance -= betAmount;
                this.app.saveUserData(userData);
            } else {
                // –†–µ–∞–ª—å–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —á–µ—Ä–µ–∑ –∫–æ—à–µ–ª—ë–∫
                await this.app.walletManager.sendTransaction(
                    'game_contract_address', // –ê–¥—Ä–µ—Å –∏–≥—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
                    betAmount,
                    'PVP Game Bet'
                );
            }

            this.startSpinning();

        } catch (error) {
            this.app.showNotification(`–û—à–∏–±–∫–∞: ${error.message}`);
        }
    }

    startSpinning() {
        this.isSpinning = true;
        this.spinButton.disabled = true;

        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        this.wheel.style.animation = 'none';
        setTimeout(() => {
            this.wheel.classList.add('wheel-spinning');
        }, 50);

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        setTimeout(() => {
            this.determineWinner();
            this.wheel.classList.remove('wheel-spinning');
            this.wheel.style.animation = 'wheel-rotate 20s linear infinite';
            this.isSpinning = false;
            this.spinButton.disabled = false;
        }, 3000);
    }

    async determineWinner() {
        const winners = ['–ò–≥—Ä–æ–∫ 1', '–ò–≥—Ä–æ–∫ 2', '–ò–≥—Ä–æ–∫ 3', '–í—ã'];
        const winner = winners[Math.floor(Math.random() * winners.length)];
        const winAmount = 100;
        
        if (winner === '–í—ã') {
            if (this.app.isDemoMode) {
                const userData = this.app.getUserData();
                userData.balance += winAmount;
                userData.pvpWins += 1;
                userData.inventory.push({
                    id: Date.now(),
                    name: 'PVP –ü–æ–¥–∞—Ä–æ–∫',
                    type: 'pvp',
                    price: 50,
                    canSell: true
                });
                this.app.saveUserData(userData);
            } else {
                // –í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø–æ–ª—É—á–∞–µ–º –≤—ã–∏–≥—Ä—ã—à –æ—Ç —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
                // await this.app.walletManager.receiveFromContract(winAmount);
            }
            this.app.showNotification(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${winAmount} TON –∏ –ø–æ–¥–∞—Ä–æ–∫!`);
        } else {
            this.app.showNotification(`–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: ${winner}`);
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PVP –∏–≥—Ä—ã
document.addEventListener('DOMContentLoaded', () => {
    if (app) {
        new PVPGame(app);
    }
});
