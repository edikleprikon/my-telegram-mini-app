class InventoryManager {
    constructor(app) {
        this.app = app;
        this.inventoryGrid = document.getElementById('inventory-grid');
        this.modal = document.getElementById('gift-modal');
        this.init();
    }

    init() {
        this.loadInventory();
        this.initModal();
    }

    loadInventory() {
        const userData = this.app.getUserData();
        this.inventoryGrid.innerHTML = '';

        userData.inventory.forEach((gift, index) => {
            const giftElement = document.createElement('div');
            giftElement.className = 'gift-item';
            giftElement.innerHTML = `
                <div class="gift-image">üéÅ</div>
                <div class="gift-name">${gift.name}</div>
                <div class="gift-type">${this.getTypeName(gift.type)}</div>
            `;
            
            giftElement.addEventListener('click', () => {
                this.showGiftModal(gift, index);
            });

            this.inventoryGrid.appendChild(giftElement);
        });
    }

    getTypeName(type) {
        const types = {
            'common': '–û–±—ã—á–Ω—ã–π',
            'rare': '–†–µ–¥–∫–∏–π',
            'pvp': 'PVP',
            'fortune': '–ö–æ–ª–µ—Å–æ'
        };
        return types[type] || type;
    }

    initModal() {
        const closeBtn = this.modal.querySelector('.close');
        const sellBtn = document.getElementById('sell-gift');

        closeBtn.addEventListener('click', () => {
            this.modal.classList.add('hidden');
        });

        sellBtn.addEventListener('click', () => {
            this.sellGift();
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        this.modal.addEventListener('click', (e) => {
            if (e.target === this.modal) {
                this.modal.classList.add('hidden');
            }
        });
    }

    showGiftModal(gift, index) {
        if (!gift.canSell) {
            this.app.showNotification('–≠—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å');
            return;
        }

        document.getElementById('modal-gift-name').textContent = gift.name;
        document.getElementById('modal-gift-description').textContent = 
            `–¢–∏–ø: ${this.getTypeName(gift.type)}\n–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: ${gift.price} TON`;
        document.getElementById('gift-price').value = gift.price;
        
        this.modal.currentGiftIndex = index;
        this.modal.classList.remove('hidden');
    }

    sellGift() {
        const price = parseInt(document.getElementById('gift-price').value);
        const index = this.modal.currentGiftIndex;
        
        if (price < 1) {
            this.app.showNotification('–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 TON');
            return;
        }

        const userData = this.app.getUserData();
        const gift = userData.inventory[index];
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞–≥–∞–∑–∏–Ω
        const shopItem = {
            ...gift,
            seller: this.app.userData.username || '–ê–Ω–æ–Ω–∏–º',
            sellerId: this.app.userData.id,
            sellPrice: price,
            timestamp: Date.now()
        };

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –º–∞–≥–∞–∑–∏–Ω (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
        let shopItems = JSON.parse(localStorage.getItem('shopItems') || '[]');
        shopItems.push(shopItem);
        localStorage.setItem('shopItems', JSON.stringify(shopItems));

        // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        userData.inventory.splice(index, 1);
        this.app.saveUserData(userData);
        
        this.modal.classList.add('hidden');
        this.loadInventory();
        
        this.app.showNotification('–ü–æ–¥–∞—Ä–æ–∫ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–¥–∞–∂—É!');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
document.addEventListener('DOMContentLoaded', () => {
    if (app) {
        new InventoryManager(app);
    }
});
