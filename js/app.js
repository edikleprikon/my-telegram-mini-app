class TelegramMiniApp {
    constructor() {
        this.tg = window.Telegram.WebApp;
        this.currentPage = 'pvp-page';
        this.userData = null;
        this.isDemoMode = false;
        this.walletManager = null;
        this.authManager = null;
        this.isInitialized = false;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
        window.app = this;
        
        this.init();
    }

    init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        if (this.tg) {
            this.tg.expand();
            this.tg.enableClosingConfirmation();
            console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.userData = this.tg?.initDataUnsafe?.user || {
            id: 1,
            first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
            last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            username: 'test_user'
        };

        console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.userData);

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(() => {
            this.hideLoadingScreen();
            this.checkInitialAuth();
            this.isInitialized = true;
            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        }, 2000);
    }

    checkInitialAuth() {
        console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
        const authData = localStorage.getItem('userAuth');
        const tonConnectData = localStorage.getItem('tonConnectData');

        if (tonConnectData && JSON.parse(tonConnectData).isConnected) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª—ë–∫');
            this.showMainApp();
            this.setDemoMode(false);
        } else if (authData && JSON.parse(authData).isAuthenticated) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ');
            this.showMainApp();
            this.setDemoMode(true);
        } else {
            console.log('üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
            this.showAuthScreen();
        }
    }

    hideLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.classList.add('hidden');
            console.log('‚úÖ –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω —Å–∫—Ä—ã—Ç');
        }
    }

    showAuthScreen() {
        const authScreen = document.getElementById('auth-screen');
        const appContainer = document.getElementById('app');
        
        if (authScreen && appContainer) {
            authScreen.classList.remove('hidden');
            appContainer.classList.add('hidden');
            this.initAuth();
            console.log('‚úÖ –≠–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–∫–∞–∑–∞–Ω');
        }
    }

    showMainApp() {
        const authScreen = document.getElementById('auth-screen');
        const appContainer = document.getElementById('app');
        
        if (authScreen && appContainer) {
            authScreen.classList.add('hidden');
            appContainer.classList.remove('hidden');
            this.initNavigation();
            this.loadUserData();
            this.initWallet();
            console.log('‚úÖ –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');
        }
    }

    initAuth() {
        console.log('üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ auth.js
        // –ù–æ –¥–æ–±–∞–≤–∏–º –±–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–¥–µ—Å—å –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        
        const demoModeBtn = document.getElementById('demo-mode-btn');
        if (demoModeBtn) {
            demoModeBtn.addEventListener('click', () => {
                console.log('üéÆ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞');
                this.enterDemoMode();
            });
        }
    }

    initNavigation() {
        console.log('üß≠ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
        const navButtons = document.querySelectorAll('.nav-btn');
        
        navButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const targetPage = e.currentTarget.getAttribute('data-page');
                console.log('üì± –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', targetPage);
                this.switchPage(targetPage);
                
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
                navButtons.forEach(btn => btn.classList.remove('active'));
                e.currentTarget.classList.add('active');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
                this.checkWalletRequirements();
            });
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
        this.initDemoButtons();
    }

    initDemoButtons() {
        console.log('üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞...');
        
        // –ö–Ω–æ–ø–∫–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –≤ PVP
        const pvpDemoBtn = document.getElementById('pvp-demo-btn');
        if (pvpDemoBtn) {
            pvpDemoBtn.addEventListener('click', () => {
                console.log('üéÆ –î–µ–º–æ-—Ä–µ–∂–∏–º –∏–∑ PVP');
                this.enterDemoMode();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
        const profileDemoBtn = document.getElementById('profile-demo-btn');
        if (profileDemoBtn) {
            profileDemoBtn.addEventListener('click', () => {
                console.log('üéÆ –î–µ–º–æ-—Ä–µ–∂–∏–º –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è');
                this.enterDemoMode();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        const modalDemoBtn = document.getElementById('modal-demo-btn');
        if (modalDemoBtn) {
            modalDemoBtn.addEventListener('click', () => {
                console.log('üéÆ –î–µ–º–æ-—Ä–µ–∂–∏–º –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
                this.enterDemoMode();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const closeModalBtn = document.getElementById('close-wallet-modal');
        if (closeModalBtn) {
            closeModalBtn.addEventListener('click', () => {
                this.hideWalletModal();
            });
        }
    }

    switchPage(pageId) {
        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', pageId);
        // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.querySelectorAll('.page').forEach(page => {
            page.classList.remove('active');
        });
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const targetPage = document.getElementById(pageId);
        if (targetPage) {
            targetPage.classList.add('active');
            this.currentPage = pageId;
            console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞:', pageId);
        }
    }

    enterDemoMode() {
        console.log('üéÆ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞...');
        const authData = {
            isAuthenticated: true,
            mode: 'demo',
            walletConnected: false,
            timestamp: Date.now()
        };
        
        localStorage.setItem('userAuth', JSON.stringify(authData));
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        this.hideWalletModal();
        
        this.hideAuthScreen();
        this.showMainApp();
        this.setDemoMode(true);
        
        this.showNotification('–î–µ–º–æ —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ TON');
    }

    hideWalletModal() {
        const modal = document.getElementById('wallet-connect-modal');
        if (modal) {
            modal.classList.add('hidden');
        }
    }

    hideAuthScreen() {
        const authScreen = document.getElementById('auth-screen');
        if (authScreen) {
            authScreen.classList.add('hidden');
        }
    }

    setDemoMode(demo) {
        this.isDemoMode = demo;
        this.updateDemoIndicators();
        console.log('üéÆ –î–µ–º–æ-—Ä–µ–∂–∏–º:', demo ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω');
    }

    updateDemoIndicators() {
        let demoIndicator = document.querySelector('.demo-indicator');
        
        if (this.isDemoMode) {
            if (!demoIndicator) {
                demoIndicator = document.createElement('div');
                demoIndicator.className = 'demo-indicator';
                demoIndicator.textContent = 'DEMO MODE';
                demoIndicator.style.cssText = `
                    position: fixed;
                    top: 10px;
                    right: 10px;
                    background: #ff6b6b;
                    color: white;
                    padding: 5px 10px;
                    border-radius: 10px;
                    font-size: 12px;
                    font-weight: bold;
                    z-index: 1000;
                `;
                document.body.appendChild(demoIndicator);
            }
        } else if (demoIndicator) {
            demoIndicator.remove();
        }
    }

    initWallet() {
        console.log('üí∞ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—à–µ–ª—å–∫–∞...');
        // –ö–æ—à–µ–ª–µ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
        this.checkWalletRequirements();
    }

    checkWalletRequirements() {
        const isWalletConnected = window.tonConnect ? window.tonConnect.getConnectionStatus() : false;
        console.log('üîó –°—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–∞:', isWalletConnected ? '–ø–æ–¥–∫–ª—é—á–µ–Ω' : '–Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
        
        // –î–ª—è PVP —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
        const pvpContainer = document.getElementById('pvp-game-container');
        const pvpWalletRequired = document.getElementById('pvp-wallet-required');
        
        if (pvpContainer && pvpWalletRequired) {
            if (isWalletConnected || this.isDemoMode) {
                pvpContainer.classList.remove('hidden');
                pvpWalletRequired.classList.add('hidden');
                console.log('‚úÖ PVP –∏–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞');
            } else {
                pvpContainer.classList.add('hidden');
                pvpWalletRequired.classList.remove('hidden');
                console.log('‚ùå PVP –∏–≥—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç –∫–æ—à–µ–ª—ë–∫');
            }
        }
    }

    loadUserData() {
        console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
        const savedData = localStorage.getItem('userData');
        if (savedData) {
            const userData = JSON.parse(savedData);
            this.updateProfile(userData);
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } else {
            // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            const initialData = {
                balance: 100,
                pvpWins: 0,
                prizesWon: 0,
                tickets: 0,
                inventory: [
                    { id: 1, name: '–û–±—ã—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫', type: 'common', price: 10, canSell: true },
                    { id: 2, name: '–†–µ–¥–∫–∏–π –ø–æ–¥–∞—Ä–æ–∫', type: 'rare', price: 25, canSell: true }
                ]
            };
            localStorage.setItem('userData', JSON.stringify(initialData));
            this.updateProfile(initialData);
            console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    }

    updateProfile(data) {
        console.log('üë§ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è...');
        const balanceElement = document.getElementById('user-balance');
        const pvpWinsElement = document.getElementById('pvp-wins');
        const prizesWonElement = document.getElementById('prizes-won');
        const ticketCountElement = document.getElementById('ticket-count');
        const userAvatarElement = document.getElementById('user-avatar');
        const userNameElement = document.getElementById('user-name');
        const userTelegramIdElement = document.getElementById('user-telegram-id');

        if (balanceElement) balanceElement.textContent = data.balance;
        if (pvpWinsElement) pvpWinsElement.textContent = data.pvpWins;
        if (prizesWonElement) prizesWonElement.textContent = data.prizesWon;
        if (ticketCountElement) ticketCountElement.textContent = data.tickets;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞ –∏ –∏–º–µ–Ω–∏
        if (userAvatarElement) {
            userAvatarElement.textContent = this.userData.first_name?.[0] || 'U';
        }
        if (userNameElement) {
            userNameElement.textContent = 
                `${this.userData.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} ${this.userData.last_name || ''}`.trim();
        }
        if (userTelegramIdElement) {
            userTelegramIdElement.textContent = `@${this.userData.username || 'username'}`;
        }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç TON Connect
    onWalletConnected(walletInfo) {
        console.log('‚úÖ –ö–æ—à–µ–ª—ë–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:', walletInfo);
        this.setDemoMode(false);
        this.checkWalletRequirements();
        this.showNotification('–ö–æ—à–µ–ª—ë–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!');
    }

    onWalletDisconnected() {
        console.log('‚ùå –ö–æ—à–µ–ª—ë–∫ –æ—Ç–∫–ª—é—á–µ–Ω');
        this.setDemoMode(true);
        this.checkWalletRequirements();
        this.showNotification('–ö–æ—à–µ–ª—ë–∫ –æ—Ç–∫–ª—é—á–µ–Ω');
    }

    showNotification(message, type = 'info') {
        console.log('üí¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', message);
        // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.tg?.showPopup) {
            this.tg.showPopup({
                title: type === 'error' ? '–û—à–∏–±–∫–∞' : '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
                message: message,
                buttons: [{ type: 'ok' }]
            });
        } else {
            alert(message);
        }
    }

    // –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
    saveUserData(data) {
        localStorage.setItem('userData', JSON.stringify(data));
        this.updateProfile(data);
    }

    getUserData() {
        return JSON.parse(localStorage.getItem('userData') || '{}');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    new TelegramMiniApp();
});
